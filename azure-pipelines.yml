# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- feature/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  GitVersion.SemVer: ''
  
steps:

- task: UseGitVersion@5
  displayName: GitVersion
  inputs:
    versionSpec: '5.x'
    updateAssemblyInfo: false

- task: Assembly-Info-NetCore@2
  displayName: 'Set Assembly Info'
  inputs:
    Path: "$(Build.SourcesDirectory)"
    FileNames: '**/DemoPackage.csproj'
    InsertAttributes: true
    FileEncoding: "auto"
    WriteBOM: false
    LogLevel: "verbose"
    FailOnWarning: false
    VersionNumber: '$(GitVersion.AssemblySemVer)'
    FileVersionNumber: '$(GitVersion.AssemblySemVer)'
    InformationalVersion: '$(GitVersion.InformationalVersion)'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/DemoPackage.csproj'
    arguments: '-p:Version=$(GitVersion.AssemblySemVer) --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack"
  inputs:
    command: 'pack'
    packagesToPack: '**/DemoPackage.csproj'
    nobuild: true
    packDirectory: '$(Build.ArtifactStagingDirectory)'
    versioningScheme: byEnvVar
    versionEnvVar: 'GitVersion.SemVer'

- task: DotNetCoreCLI@2
  displayName: 'dotnet push'
  inputs:
    command: 'push'
    searchPatternPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'b528a695-cf88-4a2d-8582-3e4b4d9349e9/92c6582b-29cc-4815-b496-6c811663f5e5'