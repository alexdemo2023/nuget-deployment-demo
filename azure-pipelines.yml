# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- feature/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  GitVersion.NuGetVersion: ''

jobs:
- job: package
  displayName: Build, pack and push
  continueOnError: false
  steps:
  
  - task: UseGitVersion@5
    displayName: GitVersion
    inputs:
      versionSpec: '5.x'
      
  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      projects: '**/DemoPackage.csproj'
      arguments: '--configuration $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersion)'
  
  - task: DotNetCoreCLI@2
    displayName: "dotnet pack"
    inputs:
      command: 'pack'
      packagesToPack: '**/DemoPackage.csproj'
      nobuild: true
      packDirectory: '$(Build.ArtifactStagingDirectory)'
      versioningScheme: byEnvVar
      versionEnvVar: 'GitVersion.NuGetVersion'
  
  - task: DotNetCoreCLI@2
    displayName: 'dotnet push'
    inputs:
      command: 'push'
      searchPatternPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'b528a695-cf88-4a2d-8582-3e4b4d9349e9/92c6582b-29cc-4815-b496-6c811663f5e5'
      
- job: tag
  dependsOn: package
  displayName: Tag if commit is on master branch
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')) 
  steps:

  - task: GitTag@5
    displayName: 'Add tag to git'
    inputs:
      workingdir: '$(SYSTEM.DEFAULTWORKINGDIRECTORY)'
      tagUser: 'robertgregorywest'
      tagEmail: 'robertgregorywest@gmail.com'
      tag: '$(GitVersion.NuGetVersion)'